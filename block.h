//==================================================
// 
// デバッグ機能(ヘッダーファイル)
// Author : Yuda Kaito
// 
//==================================================
#ifndef _BLOCK_H_
#define _BLOCK_H_

//--------------------------------------------------
// include
//--------------------------------------------------
#include "main.h"

//--------------------------------------------------
// 定義
//--------------------------------------------------
const int MAX_BLOCK = 40 * 17;

//--------------------------------------------------
// ブロック状態の列挙型
//--------------------------------------------------
enum class BLOCKTYPE
{
	NONE = 0,
	BLOCK,
	WHITE,
	MAX
};

//--------------------------------------------------
// ブロックの構造体
//--------------------------------------------------
struct Block
{
	int nIdx;	// 番号
	bool bUse;	// 使用してるか否か
	BLOCKTYPE type;	// 状態
	D3DXVECTOR3 pos;	// 位置
	D3DXVECTOR3 size;	// 大きさ
};

//--------------------------------------------------
// プロトタイプ宣言
//--------------------------------------------------
//==================================================
// 初期化
//==================================================
void InitBlock(void);

//==================================================
// 終了
//==================================================
void UninitBlock(void);

//==================================================
// 更新
//==================================================
void UpdateBlock(void);

//==================================================
// 描画
//==================================================
void DrawBlock(void);

//==================================================
// 設定
//==================================================
void SetBlock(D3DXVECTOR3 pos, D3DXVECTOR3 size, BLOCKTYPE type);

//==================================================
// 設定
//==================================================
void ChangeBlock(int nIdx, BLOCKTYPE type);

//==================================================
// 取得
//==================================================
Block* GetBlock(void);

#endif // !_BLOCK_H_
